{{- if .Values.serviceAccount.create }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "containerinsights.fullname" . }}-metrics
  namespace: {{ .Release.Namespace }}
  labels: {{- include "containerinsights.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "containerinsights.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "containerinsights.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      serviceAccountName: {{ include "containerinsights.serviceAccountName" . }}
      containers:
        - name: {{ .Release.Name }}-metrics
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.agent.ports }}
          ports:
            {{- range .Values.agent.ports }}
            - containerPort: {{ .containerPort  }}
              protocol: {{ .protocol | quote }}
              hostPort: {{ .hostPort }}
            {{- end}}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          # Please don't change below envs
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CI_VERSION
              value: "k8s/1.1.1"
          # Please don't change the mountPath
          volumeMounts:
            - name: cwagentconfig
              mountPath: /etc/cwagentconfig
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
            - name: dockersock
              mountPath: /var/run/docker.sock
              readOnly: true
            - name: varlibdocker
              mountPath: /var/lib/docker
              readOnly: true
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: devdisk
              mountPath: /dev/disk
              readOnly: true
      volumes:
        - name: cwagentconfig
          configMap:
            name: {{ include "containerinsights.fullname" . }}-metricagent-config
        - name: rootfs
          hostPath:
            path: /
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: varlibdocker
          hostPath:
            path: /var/lib/docker
        - name: sys
          hostPath:
            path: /sys
        - name: devdisk
          hostPath:
            path: /dev/disk/
{{- end }}

{{- if and .Values.serviceAccount.create .Values.logAgent.enabled }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "containerinsights.fullname" . }}-logs
  namespace: {{ .Release.Namespace }}
  labels: {{- include "containerinsights.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "containerinsights.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "containerinsights.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      serviceAccountName: {{ include "containerinsights.serviceAccountName" . }}
      # this initContainers workaround or other is needed.
      # See https://github.com/fluent/fluentd-kubernetes-daemonset/issues/90
      initContainers:
        - name: copy-fluentd-config
          image: busybox
          command: ['sh', '-c', 'cp /config-volume/..data/* /fluentd/etc']
          volumeMounts:
            - name: config-volume
              mountPath: /config-volume
            - name: fluentdconf
              mountPath: /fluentd/etc
        - name: update-log-driver
          image: busybox
          command: ['sh','-c','']
      containers:
        - name: {{ .Release.Name }}-logs
          image: "{{ .Values.logAgent.image.repository }}:{{ .Values.logAgent.image.tag }}"
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          env:
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: logs.region
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-info
                  key: cluster.name
            - name: CI_VERSION
              value: "k8s/1.1.1"
          volumeMounts:
            - name: config-volume
              mountPath: /config-volume
            - name: fluentdconf
              mountPath: /fluentd/etc
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: runlogjournal
              mountPath: /run/log/journal
              readOnly: true
            - name: dmesg
              mountPath: /var/log/dmesg
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "containerinsights.fullname" . }}-logagent-config
        - name: fluentdconf
          emptyDir: {}
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: runlogjournal
          hostPath:
            path: /run/log/journal
        - name: dmesg
          hostPath:
            path: /var/log/dmesg
{{- end }}
