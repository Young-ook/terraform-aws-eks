---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-halyard
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}
data:
  init.sh: |
    #!/bin/bash

    # Override Halyard daemon's listen address
    cp /opt/halyard/config/* /tmp/config
    printf 'server.address: 0.0.0.0\n' > /tmp/config/halyard-local.yml

    # Use Redis deployed via the dependent Helm chart
    rm -rf /tmp/spinnaker/.hal/default/service-settings
    mkdir -p /tmp/spinnaker/.hal/default/service-settings
    cp /tmp/service-settings/* /tmp/spinnaker/.hal/default/service-settings/

    rm -rf /tmp/spinnaker/.hal/default/profiles
    mkdir -p /tmp/spinnaker/.hal/default/profiles

    {{- if .Values.serviceConfigs }}
    for filename in /tmp/service-configs/*; do
      basename=$(basename -- "$filename")
      fname="${basename#*_}"
      servicename="${basename%%_*}"

      mkdir -p "/tmp/spinnaker/.hal/.boms/$servicename"
      cp "$filename" "/tmp/spinnaker/.hal/.boms/$servicename/$fname"
    done
    {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-halyard-service-settings
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}

{{/*
Render settings for each service by merging predefined defaults with values passed by
.Values.serviceSettings
*/}}
{{- $settings := dict -}}

{{/* Defaults: gate service */}}
{{- if .Values.ingress.enabled -}}
{{- $gateDefaults := dict -}}
{{- $_ := set $gateDefaults "kubernetes" (dict "useExecHealthCheck" false "serviceType" "NodePort") -}}
{{- $_ := set $settings "gate.yml" $gateDefaults -}}
{{- end -}}

{{/* Defaults: deck service */}}
{{- $deckDefaults := dict -}}
{{- $_ := set $deckDefaults "env" (dict "API_HOST" "http://spin-gate:8084") -}}
{{- if .Values.ingress.enabled -}}
{{- $_ := set $deckDefaults "kubernetes" (dict "useExecHealthCheck" false "serviceType" "NodePort") -}}
{{- end -}}
{{- $_ := set $settings "deck.yml" $deckDefaults -}}

{{- /* Merge dictionaries with passed values */}}
{{- if .Values.serviceSettings -}}
{{- $_ := mergeOverwrite $settings .Values.serviceSettings -}}
{{- end -}}

{{- /* Convert the content of settings key to YAML string */}}
{{- range $filename, $content := $settings -}}
{{- if not (typeIs "string" $content) -}}
{{- $_ := set $settings $filename ($content | toYaml) -}}
{{- end -}}
{{- end -}}

data:
{{ $settings | toYaml | indent 2 }}

{{ if .Values.serviceConfigs -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-halyard-service-configs
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}

{{/*
Render local configuration for each service with values passed by
.Values.serviceConfigs
*/}}
{{- $settings := dict -}}

{{- if .Values.serviceConfigs -}}
{{- $_ := mergeOverwrite $settings .Values.serviceConfigs -}}
{{- end -}}

{{- /* Convert the content of settings key to YAML string */}}
{{- range $filename, $content := $settings -}}
{{- if not (typeIs "string" $content) -}}
{{- $_ := set $settings $filename ($content | toYaml) -}}
{{- end -}}
{{- end -}}

data:
{{ $settings | toYaml | indent 2 }}
{{- end -}}
